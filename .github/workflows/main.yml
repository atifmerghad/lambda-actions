name: Lambda duild/deploy Pipeline

env:
  APP_VERSION: '0.0.1'
  BRANCH: echo $(echo $GITHUB_REF | cut -d'/' -f 3)
  
on:
  push:
    branches:
      - develop
  pull_request:

jobs:
  build-unit-testing: # Build code and apply unit test
      runs-on: ubuntu-latest 
      environment: 'dev'
      steps: 
        - uses: actions/checkout@v2
        - uses: dorny/paths-filter@v2
          id: changes
          with:
            base: develop
            ref: ${{ github.ref }}
            token: ${{ github.token }}
            filters: |
              lambda1: 
                - './src/lambda/**' 
        - name: Set up Python 3.7
          uses: actions/setup-python@v2
          with:
            python-version: 3.7
          
        - name: Build and Unit testing
          if: ${{ steps.changes.outputs.lambda1 == 'true' }}
          run: |
            pip install --upgrade pip
            python3.7 -m venv env 
            source env/bin/activate
            pip3 install -r ./src/python/requirements.txt
            cd ./src/python/src/tests && python -m unittest
  build-deploy-lambda-layer:
    runs-on: ubuntu-latest
    env:
      region: us-west-1
    needs:  build-unit-testing
    environment: 'dev'
    steps: 
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          ref: ${{ github.ref }}
          token: ${{ github.token }}
          filters: |
            layer: 
              - './src/layers/**'
      - uses: actions/setup-python@v2
      - name: Set env.BRANCH
        run: echo "BRANCH=$(echo $GITHUB_REF | cut -d'/' -f 3)" >> $GITHUB_ENV
      - name: Check changes on the layer
        if: ${{ steps.changes.outputs.layer == 'true' }}
        run: echo "$region ---layer dev--> github.head_ref ---> ${{ github.head_ref }}  "

  deploy-lambda-functions-dev:
    runs-on: ubuntu-latest
    env:
      region: us-west-1
    environment: 'dev'
    needs: build-deploy-lambda-layer
    steps: 
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          ref: ${{ github.ref }}
          token: ${{ github.token }}
          filters: |
            lambda1: 
              - './src/lambda/**' 
      - uses: actions/setup-python@v2

      - name: DEV build using SAM KPI VIEW 
        if: ${{ steps.changes.outputs.lambda1 == 'true' }}
        run: echo "$region ----------> Build lambda in Dev Env"
      - name: deploy on AWS Dev
        if: ${{ steps.changes.outputs.lambda1 == 'true' }}
        run: echo "$region ----------> Deploy lambda in Dev ENV"

  build-deploy-lambda-layer-test:
      runs-on: ubuntu-latest
      env:
        region: us-east-1
      needs:  deploy-lambda-functions-dev
      environment: 'dev'
      steps: 
        - uses: actions/checkout@v2
        - uses: dorny/paths-filter@v2
          id: changes
          with:
            ref: ${{ github.ref }}
            token: ${{ github.token }}
            filters: |
              layer: 
                - './src/layers/**'
        - uses: actions/setup-python@v2
        - name: Set env.BRANCH
          run: echo "BRANCH=$(echo $GITHUB_REF | cut -d'/' -f 3)" >> $GITHUB_ENV
        - name: Check changes on the layer
          if: ${{ steps.changes.outputs.layer == 'true' }}
          run: echo "$region --Layer test--------github.head_ref ---> ${{ github.head_ref }}  "

  deploy-lambda-functions-test:
    runs-on: ubuntu-latest
    env:
      region: us-east-1
    environment: 'test'
    needs: build-deploy-lambda-layer-test
    steps: 
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          ref: ${{ github.ref }}
          token: ${{ github.token }}
          filters: |
            lambda1: 
              - './src/lambda/**' 
      - uses: actions/setup-python@v2

      - name: Test - build using SAM KPI VIEW 
        if: ${{ steps.changes.outputs.lambda1 == 'true' }}
        run: echo "$region ----------> Build lambda in Test env"
      - name: deploy on AWS
        if: ${{ steps.changes.outputs.lambda1 == 'true' }}
        run: echo "$region ----------> Deploy lambda in Test env"

